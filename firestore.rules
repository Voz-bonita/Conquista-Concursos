rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  	match /available_contests/{contests} {
    	allow read: if true;
      allow write: if false;
    }
    match /contests_questions/{contestId} {
    	allow read: if userCanAccessContest(contestId);
      allow write: if false;
    }
    match /users/{userId} {
    	allow read: if isSignedIn() && isOwnData(userId);
    }
    match /contests/{document=**} {
    	allow write: if false;
    }
    match /contest_user_answers/{userId}/{contestId}/answer {
    	allow read, create: if userCanAccessContest(contestId) && isOwnData(userId);
    }
    
    function isSignedIn() {
    	return request.auth != null;
    }
    function isOwnData(userId) {
    	return request.auth.uid == userId;
    }
    function userPaidContestTry(contestId) {
    	 return get(/databases/$(database)/documents/users/$(request.auth.uid)).data[contestId] == true;
    }
    function isAdmin() {
    	return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    function contestIsFree(contestId) {
    	return get(/databases/$(database)/documents/contests_questions/$(contestId)).data.metadata.price == 0;
    }
    function userCanAccessPaidContest(contestId) {
    	return isSignedIn() && (userPaidContestTry(contestId) || isAdmin());
    }
    function userCanAccessContest(contestId) {
    	return contestIsFree(contestId) || userCanAccessPaidContest(contestId)
    }
  }
}